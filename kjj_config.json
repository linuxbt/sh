{
  "menu": {
    "1": {
      "name": "系统管理",
      "submenu": {
        "1": {"name": "更新系统", "cmd": "sudo apt update && sudo apt upgrade -y"},
        "2": {"name": "清理系统", "cmd": "sudo apt autoremove -y && sudo apt clean"},
        "3": {"name": "查看磁盘空间", "cmd": "df -h"}
      }
    },
    "2": {
      "name": "服务管理",
      "submenu": {
        "1": {
          "name": "Nginx",
          "submenu": {
            "1": {"name": "启动 Nginx", "cmd": "sudo systemctl start nginx"},
            "2": {"name": "停止 Nginx", "cmd": "sudo systemctl stop nginx"},
            "3": {"name": "重启 Nginx", "cmd": "sudo systemctl restart nginx"}
          }
        },
        "2": {
          "name": "Docker",
          "submenu": {
            "1": {"name": "启动 Docker", "cmd": "sudo systemctl start docker"},
            "2": {"name": "停止 Docker", "cmd": "sudo systemctl stop docker"},
            "3": {"name": "重启 Docker", "cmd": "sudo systemctl restart docker"}
          }
        }
      }
    }
  },
  "commands": {
  "il": "iptables -L",
  "fwl": "firewall-cmd --list-all",
  "fwr": "systemctl restart firewalld",
  "fws": "systemctl status firewalld",
  "fwlist": "firewall-cmd --list-all",
  "fwre": "firewall-cmd --reload",
  "sr": "systemctl restart",
  "srd": "systemctl restart docker",
  "daere": "systemctl daemon-reload",
  "daemonre": "systemctl daemon-reload",
  "ds": "docker start",
  "dsn": "docker start nginx",
  "dsnginx": "docker start nginx",
  "dsphp": "docker start php",
  "dsphp74": "docker start php74",
  "dsmysql": "docker start mysql",
  "dsredis": "docker start redis",
  "dr": "docker restart",
  "drn": "docker restart nginx",
  "drnginx": "docker restart nginx",
  "drphp": "docker restart php",
  "drphp74": "docker restart php74",
  "drmysql": "docker restart mysql",
  "drredis": "docker restart redis",
  "dc": "docker compose",
  "dcdnginx": "docker compose down nginx",
  "dcdphp": "docker compose down php",
  "dcdphp74": "docker compose down php74",
  "dcdmysql": "docker compose down mysql",
  "dcdredis": "docker compose down redis",
  "dcunginx": "docker compose up nginx -d",
  "dcuphp": "docker compose up php -d",
  "dcuphp74": "docker compose up php74 -d",
  "dcumysql": "docker compose up mysql -d",
  "dcuredis": "docker compose up redis -d",
  "fx80": "sudo firewall-cmd --permanent --zone=public --add-port=80/tcp && sudo firewall-cmd --reload",
  "fx443": "sudo firewall-cmd --permanent --zone=public --add-port=443/tcp && sudo firewall-cmd --reload",
  "fx80443": "sudo firewall-cmd --permanent --zone=public --add-port=80/tcp && sudo firewall-cmd --permanent --zone=public --add-port=443/tcp && sudo firewall-cmd --reload",
  "yc80": "sudo firewall-cmd --zone=public --remove-port=80/tcp --permanent && sudo firewall-cmd --reload",
  "yc443": "sudo firewall-cmd --zone=public --remove-port=443/tcp --permanent && sudo firewall-cmd --reload",
  "yccy": "sudo firewall-cmd --zone=public --remove-port=39000-40000/tcp --permanent && sudo firewall-cmd --zone=public --remove-port=20/tcp --permanent && sudo firewall-cmd --zone=public --remove-port=21/tcp --permanent && sudo firewall-cmd --zone=public --remove-port=22/tcp --permanent && sudo firewall-cmd --zone=public --remove-port=888/tcp --permanent && sudo firewall-cmd --reload",
  "ghy": "bash <(curl -sSL https://raw.githubusercontent.com/SuperManito/LinuxMirrors/main/ChangeMirrors.sh) --abroad",
  "ghnh": "curl -O https://raw.githubusercontent.com/jinwyp/one_click_script/master/install_kernel.sh && chmod +x ./install_kernel.sh && ./install_kernel.sh",
  "azdk": "bash <(curl -sSL https://raw.githubusercontent.com/SuperManito/LinuxMirrors/main/DockerInstallation.sh)",
  "azpy": "curl -O https://raw.githubusercontent.com/lx969788249/lxspacepy/master/pyinstall.sh && chmod +x pyinstall.sh && ./pyinstall.sh",
  "fxbt": "read -p \"Enter IP addresses (多个ip用空格隔开，ip段格式192.168.1.0/24): \" IPS && BT_PORT=$(cat /www/server/panel/data/port.pl) && for IP in $IPS; do firewall-cmd --permanent --add-rich-rule=\"rule family='ipv4' source address='$IP' port protocol='tcp' port='$BT_PORT' accept\"; done && firewall-cmd --reload && echo \"已放行宝塔面板白名单 IPs: $IPS\"",
  "DDcentos7": "wget --no-check-certificate -qO InstallNET.sh 'https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh' && chmod a+x InstallNET.sh && bash InstallNET.sh -centos 7 -pwd 'abcd1234'",
  "DDdebian12": "wget --no-check-certificate -qO InstallNET.sh 'https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh' && chmod a+x InstallNET.sh && bash InstallNET.sh -debian 12 -pwd 'abcd1234'",
  "DDrocky9": "wget --no-check-certificate -qO InstallNET.sh 'https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh' && chmod a+x InstallNET.sh && bash InstallNET.sh -rockylinux 9 -pwd 'abcd1234'",
  "DDalma9": "wget --no-check-certificate -qO InstallNET.sh 'https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh' && chmod a+x InstallNET.sh && bash InstallNET.sh -almalinux 9 -pwd 'abcd1234'",
  "DDubuntu22": "wget --no-check-certificate -qO InstallNET.sh 'https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh' && chmod a+x InstallNET.sh && bash InstallNET.sh -ubuntu 22.04 -pwd 'abcd1234'",
  "DDwin11": "wget --no-check-certificate -qO InstallNET.sh 'https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh' && chmod a+x InstallNET.sh && bash InstallNET.sh -windows 11 -pwd 'Teddysun.com'",
  "azlc": "STREAM=1 bash -c \"$(curl -fsSLk https://waf-ce.chaitin.cn/release/latest/setup.sh)\""
}
